package com.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import com.entity.Doctor;

public class DoctorDao {

	private Connection conn;

	public DoctorDao(Connection conn) {
		this.conn = conn;
	}

	// Method to register a new doctor
	public boolean registerDoctor(Doctor d) {
		boolean f = false;
		try {
			String sql = "INSERT INTO doctor (fullName, dob, qualification, specialist, email, mobNo, password) VALUES (?, ?, ?, ?, ?, ?, ?)";
			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setString(1, d.getFullName());
			ps.setString(2, d.getDob());
			ps.setString(3, d.getQualification());
			ps.setString(4, d.getSpecialist());
			ps.setString(5, d.getEmail());
			ps.setString(6, d.getMobNo());
			ps.setString(7, d.getPassword());

			int i = ps.executeUpdate();
			if (i == 1) {
				f = true;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return f;
	}

	// Method to get a doctor by ID
	public Doctor getDoctorById(int doctorId) {
		Doctor doctor = null;
		try {
			String sql = "SELECT * FROM doctor WHERE id = ?";
			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setInt(1, doctorId);
			ResultSet rs = ps.executeQuery();
			if (rs.next()) {
				doctor = new Doctor();
				doctor.setId(rs.getInt("id"));
				doctor.setFullName(rs.getString("fullName"));
				doctor.setDob(rs.getString("dob"));
				doctor.setQualification(rs.getString("qualification"));
				doctor.setSpecialist(rs.getString("specialist"));
				doctor.setEmail(rs.getString("email"));
				doctor.setMobNo(rs.getString("mobNo"));
				doctor.setPassword(rs.getString("password"));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return doctor;
	}

	// Method to get all doctors
	public List<Doctor> getAllDoctors() {
		List<Doctor> list = new ArrayList<>();
		try {
			String sql = "SELECT * FROM doctor";
			PreparedStatement ps = conn.prepareStatement(sql);
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				Doctor doctor = new Doctor();
				doctor.setId(rs.getInt("id"));
				doctor.setFullName(rs.getString("fullName"));
				doctor.setDob(rs.getString("dob"));
				doctor.setQualification(rs.getString("qualification"));
				doctor.setSpecialist(rs.getString("specialist"));
				doctor.setEmail(rs.getString("email"));
				doctor.setMobNo(rs.getString("mobNo"));
				list.add(doctor);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}

	// Method to update doctor details
	public boolean updateDoctor(Doctor doctor) {
		boolean f = false;
		try {
			String sql = "UPDATE doctor SET fullName = ?, dob = ?, qualification = ?, specialist = ?, email = ?, mobNo = ?, password = ? WHERE id = ?";
			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setString(1, doctor.getFullName());
			ps.setString(2, doctor.getDob());
			ps.setString(3, doctor.getQualification());
			ps.setString(4, doctor.getSpecialist());
			ps.setString(5, doctor.getEmail());
			ps.setString(6, doctor.getMobNo());
			ps.setString(7, doctor.getPassword());
			ps.setInt(8, doctor.getId());

			int i = ps.executeUpdate();
			if (i == 1) {
				f = true;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return f;
	}

	// Method to delete a doctor by ID
	public boolean deleteDoctor(int id) {
		boolean f = false;
		try {
			String sql = "DELETE FROM doctor WHERE id = ?";
			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setInt(1, id);
			int i = ps.executeUpdate();
			if (i == 1) {
				f = true;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return f;
	}

	public Doctor login(String email, String password) {
		Doctor d = null;
		try {
			String sql = "select * from doctor where email=? & password=?";
			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setString(1, email);
			ps.setString(1, password);
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				d = new Doctor();
				d.setId(rs.getInt("id"));
				d.setFullName(rs.getString("fullName"));
				d.setDob(rs.getString("dob"));
				d.setQualification(rs.getString("qualification"));
				d.setSpecialist(rs.getString("specialist"));
				d.setEmail(rs.getString("email"));
				d.setMobNo(rs.getString("mobNo"));
				d.setPassword(rs.getString("password"));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		return d;

	}
}
