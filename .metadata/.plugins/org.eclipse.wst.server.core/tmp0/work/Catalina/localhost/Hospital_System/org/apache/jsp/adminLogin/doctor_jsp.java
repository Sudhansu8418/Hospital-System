/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2024-09-18 11:08:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.adminLogin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.entity.Doctor;
import com.entity.Specialist;
import java.util.List;
import com.db.DbConnection;
import com.dao.DoctorDao;
import com.dao.SpecialistDao;

public final class doctor_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/adminLogin/../component/allcss.jsp", Long.valueOf(1722852241815L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1723975437912L));
    _jspx_dependants.put("jar:file:/C:/hospital_System/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Hospital_System/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
    _jspx_dependants.put("/adminLogin/navbar.jsp", Long.valueOf(1724699813749L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.entity.Specialist");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.dao.DoctorDao");
    _jspx_imports_classes.add("com.db.DbConnection");
    _jspx_imports_classes.add("com.dao.SpecialistDao");
    _jspx_imports_classes.add("com.entity.Doctor");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Doctor Management</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css\"\r\n");
      out.write("	integrity=\"sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==\"\r\n");
      out.write("	crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("		integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".paint-card {\r\n");
      out.write("	box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table-container {\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n");
      out.write("	/* Adding shadow to table container */\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	margin-bottom: 1rem; margin-left : -1rem;\r\n");
      out.write("	color: #212529;\r\n");
      out.write("	box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	margin-left: -1rem;\r\n");
      out.write("	/* Adding shadow to the table */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table thead th {\r\n");
      out.write("	background-color: #6c757d; /* Grey header background */\r\n");
      out.write("	color: #fff; /* White text color */\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table tbody tr:hover {\r\n");
      out.write("	background-color: #f1f1f1; /* Light grey background on hover */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table td, .table th {\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	padding: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn {\r\n");
      out.write("	margin: 0 5px;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	padding: 8px 12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-primary {\r\n");
      out.write("	background-color: #007bff;\r\n");
      out.write("	border-color: #007bff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-primary:hover {\r\n");
      out.write("	background-color: #0056b3;\r\n");
      out.write("	border-color: #004085;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-danger {\r\n");
      out.write("	background-color: #dc3545;\r\n");
      out.write("	border-color: #dc3545;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-danger:hover {\r\n");
      out.write("	background-color: #c82333;\r\n");
      out.write("	border-color: #bd2130;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-dark bg-success\">\r\n");
      out.write("	<div class=\"container-fluid\">\r\n");
      out.write("		<a class=\"navbar-brand\" href=\"index.jsp\"> <i\r\n");
      out.write("			class=\"fa-solid fa-house-medical\"></i> MEDI HOME\r\n");
      out.write("		</a>\r\n");
      out.write("		<button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n");
      out.write("			data-bs-target=\"#navbarSupportedContent\"\r\n");
      out.write("			aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n");
      out.write("			aria-label=\"Toggle navigation\">\r\n");
      out.write("			<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("		</button>\r\n");
      out.write("		<div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n");
      out.write("			<ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link active\"\r\n");
      out.write("					aria-current=\"page\" href=\"home.jsp\">Home</a></li>\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link active\"\r\n");
      out.write("					aria-current=\"page\" href=\"doctor.jsp\">DOCTOR</a></li>\r\n");
      out.write("\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link active\"\r\n");
      out.write("					aria-current=\"page\" href=\"patient.jsp\">PATIENT</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("			<form class=\"d-flex\">\r\n");
      out.write("				<div class=\"dropdown\">\r\n");
      out.write("					<button class=\"btn btn-light dropdown-toggle\" type=\"button\"\r\n");
      out.write("						id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\"\r\n");
      out.write("						aria-expanded=\"false\">Admin</button>\r\n");
      out.write("					<ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n");
      out.write("						<li><a class=\"dropdown-item\" href=\"../adminlogout\">Logout</a></li>\r\n");
      out.write("						\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</nav>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");

	String doctorId = request.getParameter("id");
	Doctor doctor = null;
	if (doctorId != null) {
		DoctorDao doctorDao = new DoctorDao(DbConnection.getConnection());
		doctor = doctorDao.getDoctorById(Integer.parseInt(doctorId));
	}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container-fluid p-3\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-md-4\">\r\n");
      out.write("				<div class=\"card paint-card\">\r\n");
      out.write("					<div class=\"card-body\">\r\n");
      out.write("						<p class=\"fs-3 text-center\">");
      out.print(doctor == null ? "Add Doctor" : "Edit Doctor");
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("						<!-- Set form action to either add or update based on if we are editing -->\r\n");
      out.write("						");
      out.write("\r\n");
      out.write("						");
      out.write("\r\n");
      out.write("						<form\r\n");
      out.write("							action=\"");
      out.print(doctor == null ? request.getContextPath() + "/addDoctor" : request.getContextPath() + "/updateDoctor");
      out.write("\"\r\n");
      out.write("							method=\"post\">\r\n");
      out.write("							<input type=\"hidden\" name=\"id\"\r\n");
      out.write("								value=\"");
      out.print(doctor != null ? doctor.getId() : "");
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("							<div class=\"mb-3\">\r\n");
      out.write("								<label class=\"form-label\">Full Name</label> <input type=\"text\"\r\n");
      out.write("									name=\"fullName\" class=\"form-control\"\r\n");
      out.write("									value=\"");
      out.print(doctor != null ? doctor.getFullName() : "");
      out.write("\"\r\n");
      out.write("									required>\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<div class=\"mb-3\">\r\n");
      out.write("								<label class=\"form-label\">DOB</label> <input type=\"text\"\r\n");
      out.write("									name=\"dob\" class=\"form-control\"\r\n");
      out.write("									value=\"");
      out.print(doctor != null ? doctor.getDob() : "");
      out.write("\" required>\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<div class=\"mb-3\">\r\n");
      out.write("								<label class=\"form-label\">Qualification</label> <input\r\n");
      out.write("									type=\"text\" name=\"qualification\" class=\"form-control\"\r\n");
      out.write("									value=\"");
      out.print(doctor != null ? doctor.getQualification() : "");
      out.write("\"\r\n");
      out.write("									required>\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<div class=\"mb-3\">\r\n");
      out.write("								<label class=\"form-label\">Specialist</label> <select\r\n");
      out.write("									name=\"specialist\" class=\"form-control\" required>\r\n");
      out.write("									<option>..select..</option>\r\n");
      out.write("									");

									SpecialistDao specialistDao = new SpecialistDao(DbConnection.getConnection());
									List<Specialist> specialistList = specialistDao.getAllSpecialist();
									for (Specialist s : specialistList) {
									
      out.write("\r\n");
      out.write("									<option value=\"");
      out.print(s.getSpecialistName());
      out.write("\"\r\n");
      out.write("										");
      out.print(doctor != null && doctor.getSpecialist().equals(s.getSpecialistName()) ? "selected" : "");
      out.write(">\r\n");
      out.write("										");
      out.print(s.getSpecialistName());
      out.write("\r\n");
      out.write("									</option>\r\n");
      out.write("									");

									}
									
      out.write("\r\n");
      out.write("								</select>\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<div class=\"mb-3\">\r\n");
      out.write("								<label class=\"form-label\">Email</label> <input type=\"email\"\r\n");
      out.write("									name=\"email\" class=\"form-control\"\r\n");
      out.write("									value=\"");
      out.print(doctor != null ? doctor.getEmail() : "");
      out.write("\" required>\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<div class=\"mb-3\">\r\n");
      out.write("								<label class=\"form-label\">Mobile</label> <input type=\"text\"\r\n");
      out.write("									name=\"mobNo\" class=\"form-control\"\r\n");
      out.write("									value=\"");
      out.print(doctor != null ? doctor.getMobNo() : "");
      out.write("\" required>\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<div class=\"mb-3\">\r\n");
      out.write("								<label class=\"form-label\">Password</label> <input\r\n");
      out.write("									type=\"password\" name=\"password\" class=\"form-control\"\r\n");
      out.write("									value=\"");
      out.print(doctor != null ? doctor.getPassword() : "");
      out.write("\"\r\n");
      out.write("									required>\r\n");
      out.write("							</div>\r\n");
      out.write("							<button type=\"submit\" class=\"btn btn-success w-100\">");
      out.print(doctor != null ? "Update" : "Submit");
      out.write("</button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("						</form>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"col-md-8\">\r\n");
      out.write("				<div class=\"card paint-card\">\r\n");
      out.write("					<div class=\"card-body table-container\">\r\n");
      out.write("						<p class=\"fs-3 text-center\">Doctor Details</p>\r\n");
      out.write("						<table class=\"table table-striped table-bordered table-hover\">\r\n");
      out.write("							<thead>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<th scope=\"col\">Full Name</th>\r\n");
      out.write("									<th scope=\"col\">DOB</th>\r\n");
      out.write("									<th scope=\"col\">Qualification</th>\r\n");
      out.write("									<th scope=\"col\">Specialist</th>\r\n");
      out.write("									<th scope=\"col\">Email</th>\r\n");
      out.write("									<th scope=\"col\">Mob No.</th>\r\n");
      out.write("									<th scope=\"col\">Action</th>\r\n");
      out.write("								</tr>\r\n");
      out.write("							</thead>\r\n");
      out.write("							<tbody>\r\n");
      out.write("								");

								DoctorDao doctorDao = new DoctorDao(DbConnection.getConnection());
								List<Doctor> doctorList = doctorDao.getAllDoctors();
								for (Doctor doc : doctorList) {
								
      out.write("\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td>");
      out.print(doc.getFullName());
      out.write("</td>\r\n");
      out.write("									<td>");
      out.print(doc.getDob());
      out.write("</td>\r\n");
      out.write("									<td>");
      out.print(doc.getQualification());
      out.write("</td>\r\n");
      out.write("									<td>");
      out.print(doc.getSpecialist());
      out.write("</td>\r\n");
      out.write("									<td>");
      out.print(doc.getEmail());
      out.write("</td>\r\n");
      out.write("									<td>");
      out.print(doc.getMobNo());
      out.write("</td>\r\n");
      out.write("									<td>\r\n");
      out.write("										<div class=\"d-flex\">\r\n");
      out.write("											<a\r\n");
      out.write("												href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/editDoctor?id=");
      out.print( doc.getId() );
      out.write("\"\r\n");
      out.write("												class=\"btn btn-primary btn-sm mr-2\">Edit</a> <a\r\n");
      out.write("												href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/deleteDoctor?id=");
      out.print( doc.getId() );
      out.write("\"\r\n");
      out.write("												class=\"btn btn-danger btn-sm\"\r\n");
      out.write("												onclick=\"return confirm('Are you sure you want to delete this doctor?');\">Delete</a>\r\n");
      out.write("										</div>\r\n");
      out.write("								</tr>\r\n");
      out.write("								");

								}
								
      out.write("\r\n");
      out.write("							</tbody>\r\n");
      out.write("						</table>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
